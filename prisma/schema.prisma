// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/client"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

enum Type {
  CHILDREND
  YOUTH
}

model Member {
  id        Int       @id @default(autoincrement())
  fullname  String    @db.VarChar(255)
  type      Type      @default(CHILDREND)
  class     String    @db.VarChar(5)
  school    String    @db.VarChar(50)
  createdAt DateTime  @default(now())
  CheckIn   CheckIn[]
  JoinIn    JoinIn[]
}

model CheckIn {
  id        Int      @id @default(autoincrement())
  note      String?
  member    Member?  @relation(fields: [memberId], references: [id],onDelete: Cascade,onUpdate: Cascade)
  memberId  Int?
  createdAt DateTime @default(now())
}

model Perform {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(100)
  description String   @db.VarChar(255)
  JoinIn      JoinIn[]
}

model JoinIn {
  id       Int      @id @default(autoincrement())
  member   Member?  @relation(fields: [memberId], references: [id])
  memberId Int?
  perform  Perform? @relation(fields: [perfomId], references: [id],onDelete: Cascade,onUpdate: Cascade)
  perfomId Int?
}
